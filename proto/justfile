git_root := `git rev-parse --show-toplevel`
tmpdir := `mktemp -d`

_buf:
  go mod tidy || echo "go mod tidy failed. Continuing..."
  go install \
    github.com/bufbuild/buf/cmd/buf \
    github.com/cosmos/cosmos-proto/cmd/protoc-gen-go-pulsar \
    github.com/cosmos/gogoproto/protoc-gen-gocosmos \
    github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway \
    github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2 \
    golang.org/x/tools/cmd/goimports \
    google.golang.org/grpc/cmd/protoc-gen-go-grpc \
    google.golang.org/protobuf/cmd/protoc-gen-go

_clean-proto-gogo:
  #!/usr/bin/env bash
  shopt -s globstar
  rm -rf {{git_root / "warden/x/**/*.pb.go"}}

proto-gogo: _buf
  buf generate --template={{git_root / "proto/buf.gen.gogo.yaml"}} --output={{tmpdir}}
  cp -rf {{tmpdir}}/github.com/warden-protocol/wardenprotocol/* {{git_root}}

_clean-proto-pulsar:
  #!/usr/bin/env bash
  shopt -s globstar
  mkdir -p {{git_root / "api"}}
  rm -rf {{git_root / "api/**/*.pulsar.go"}}

proto-pulsar: _buf _clean-proto-pulsar
  buf generate --template={{git_root / "proto/buf.gen.pulsar.yaml"}} --output={{tmpdir}}
  rm -rf {{git_root / "api/"}}
  cp -rf {{tmpdir}}/api {{git_root / "api"}}

# run linter for protobufs
proto-lint: _buf
  buf lint

# regenerate all protobuf definitions using "buf"
proto: proto-gogo proto-pulsar
