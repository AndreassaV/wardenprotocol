syntax = "proto3";
package warden.warden.v1beta2;

option go_package = "github.com/warden-protocol/wardenprotocol/warden/x/warden/types/v1beta2";

// Space is a collection of users (called owners) that manages a set of Keys.
message Space {
  // Unique ID of the space.
  uint64 id = 1;

  // Address of the creator of the space.
  string creator = 2;

  // List of owners of the space.
  repeated string owners = 3;

  // Optional ID of the Rule to be applied to every *admin* operation.
  // If not specified, the default Rule is used.
  //
  // Admin operations are:
  // - warden.warden.Msg.AddSpaceOwner
  // - warden.warden.Msg.RemoveSpaceOwner
  // - warden.warden.Msg.UpdateSpace
  //
  // The default Rule is to allow any operation when at least one of its
  // owner approves it.
  uint64 admin_rule_id = 5;

  // Optional ID of the Rule to be applied to every *sign* operation.
  // If not specified, the default Rule is used.
  //
  // Sign operations are:
  // - warden.warden.Msg.NewKeyRequest
  // - warden.warden.Msg.NewSignatureRequest
  // - warden.warden.Msg.UpdateKey
  //
  // The default Rule is to allow any operation when at least one of its
  // owner approves it.
  uint64 sign_rule_id = 6;
}

