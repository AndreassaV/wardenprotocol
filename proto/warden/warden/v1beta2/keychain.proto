syntax = "proto3";

package warden.warden.v1beta2;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/warden-protocol/wardenprotocol/warden/x/warden/types/v1beta2";

// Keychain is an operator that can create and manage Keys.
//
// Users can request a Keychain to create a new Key using a particular scheme.
// The Keychain will store the private key, while the public key will be stored
// inside the Key object on-chain.
//
// Users can request a Keychain to sign data using a particular Key.
//
// The Keychain has an allowlist of addresses that can be used to write data
// on-chain (public keys and signatures). This can also be used to rotate the
// identity of the Keychain.
message Keychain {
  // ID of the Keychain.
  uint64 id = 1;

  // Address of the creator of the Keychain.
  string creator = 2;

  // A human-readable description of the Keychain.
  string description = 3;

  // Addresses that can update this Keychain.
  repeated string admins = 4;

  // Addresses that can write data on-chain on behalf of this Keychain.
  repeated string writers = 5;

  reserved 6;

  // Fees for creating and signing Keys.
  KeychainFees fees = 7;
}

// Fees for creating and signing Keys.
message KeychainFees {
  // Fee for creating a new Key.
  repeated cosmos.base.v1beta1.Coin key_req = 1 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (amino.dont_omitempty)   = true,
    (amino.encoding)         = "legacy_coins"
  ];

  // Fee for signing data.
  repeated cosmos.base.v1beta1.Coin sig_req = 2 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (amino.dont_omitempty)   = true,
    (amino.encoding)         = "legacy_coins"
  ];
}
