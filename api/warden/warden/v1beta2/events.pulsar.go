// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package wardenv1beta2

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_EventCreateSpace               protoreflect.MessageDescriptor
	fd_EventCreateSpace_id            protoreflect.FieldDescriptor
	fd_EventCreateSpace_creator       protoreflect.FieldDescriptor
	fd_EventCreateSpace_owners_count  protoreflect.FieldDescriptor
	fd_EventCreateSpace_admin_rule_id protoreflect.FieldDescriptor
	fd_EventCreateSpace_sign_rule_id  protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventCreateSpace = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventCreateSpace")
	fd_EventCreateSpace_id = md_EventCreateSpace.Fields().ByName("id")
	fd_EventCreateSpace_creator = md_EventCreateSpace.Fields().ByName("creator")
	fd_EventCreateSpace_owners_count = md_EventCreateSpace.Fields().ByName("owners_count")
	fd_EventCreateSpace_admin_rule_id = md_EventCreateSpace.Fields().ByName("admin_rule_id")
	fd_EventCreateSpace_sign_rule_id = md_EventCreateSpace.Fields().ByName("sign_rule_id")
}

var _ protoreflect.Message = (*fastReflection_EventCreateSpace)(nil)

type fastReflection_EventCreateSpace EventCreateSpace

func (x *EventCreateSpace) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventCreateSpace)(x)
}

func (x *EventCreateSpace) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventCreateSpace_messageType fastReflection_EventCreateSpace_messageType
var _ protoreflect.MessageType = fastReflection_EventCreateSpace_messageType{}

type fastReflection_EventCreateSpace_messageType struct{}

func (x fastReflection_EventCreateSpace_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventCreateSpace)(nil)
}
func (x fastReflection_EventCreateSpace_messageType) New() protoreflect.Message {
	return new(fastReflection_EventCreateSpace)
}
func (x fastReflection_EventCreateSpace_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventCreateSpace
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventCreateSpace) Descriptor() protoreflect.MessageDescriptor {
	return md_EventCreateSpace
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventCreateSpace) Type() protoreflect.MessageType {
	return _fastReflection_EventCreateSpace_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventCreateSpace) New() protoreflect.Message {
	return new(fastReflection_EventCreateSpace)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventCreateSpace) Interface() protoreflect.ProtoMessage {
	return (*EventCreateSpace)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventCreateSpace) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventCreateSpace_id, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_EventCreateSpace_creator, value) {
			return
		}
	}
	if x.OwnersCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.OwnersCount)
		if !f(fd_EventCreateSpace_owners_count, value) {
			return
		}
	}
	if x.AdminRuleId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.AdminRuleId)
		if !f(fd_EventCreateSpace_admin_rule_id, value) {
			return
		}
	}
	if x.SignRuleId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SignRuleId)
		if !f(fd_EventCreateSpace_sign_rule_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventCreateSpace) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventCreateSpace.id":
		return x.Id != uint64(0)
	case "warden.warden.v1beta2.EventCreateSpace.creator":
		return x.Creator != ""
	case "warden.warden.v1beta2.EventCreateSpace.owners_count":
		return x.OwnersCount != uint64(0)
	case "warden.warden.v1beta2.EventCreateSpace.admin_rule_id":
		return x.AdminRuleId != uint64(0)
	case "warden.warden.v1beta2.EventCreateSpace.sign_rule_id":
		return x.SignRuleId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventCreateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventCreateSpace does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventCreateSpace) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventCreateSpace.id":
		x.Id = uint64(0)
	case "warden.warden.v1beta2.EventCreateSpace.creator":
		x.Creator = ""
	case "warden.warden.v1beta2.EventCreateSpace.owners_count":
		x.OwnersCount = uint64(0)
	case "warden.warden.v1beta2.EventCreateSpace.admin_rule_id":
		x.AdminRuleId = uint64(0)
	case "warden.warden.v1beta2.EventCreateSpace.sign_rule_id":
		x.SignRuleId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventCreateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventCreateSpace does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventCreateSpace) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventCreateSpace.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventCreateSpace.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "warden.warden.v1beta2.EventCreateSpace.owners_count":
		value := x.OwnersCount
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventCreateSpace.admin_rule_id":
		value := x.AdminRuleId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventCreateSpace.sign_rule_id":
		value := x.SignRuleId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventCreateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventCreateSpace does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventCreateSpace) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventCreateSpace.id":
		x.Id = value.Uint()
	case "warden.warden.v1beta2.EventCreateSpace.creator":
		x.Creator = value.Interface().(string)
	case "warden.warden.v1beta2.EventCreateSpace.owners_count":
		x.OwnersCount = value.Uint()
	case "warden.warden.v1beta2.EventCreateSpace.admin_rule_id":
		x.AdminRuleId = value.Uint()
	case "warden.warden.v1beta2.EventCreateSpace.sign_rule_id":
		x.SignRuleId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventCreateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventCreateSpace does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventCreateSpace) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventCreateSpace.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventCreateSpace is not mutable"))
	case "warden.warden.v1beta2.EventCreateSpace.creator":
		panic(fmt.Errorf("field creator of message warden.warden.v1beta2.EventCreateSpace is not mutable"))
	case "warden.warden.v1beta2.EventCreateSpace.owners_count":
		panic(fmt.Errorf("field owners_count of message warden.warden.v1beta2.EventCreateSpace is not mutable"))
	case "warden.warden.v1beta2.EventCreateSpace.admin_rule_id":
		panic(fmt.Errorf("field admin_rule_id of message warden.warden.v1beta2.EventCreateSpace is not mutable"))
	case "warden.warden.v1beta2.EventCreateSpace.sign_rule_id":
		panic(fmt.Errorf("field sign_rule_id of message warden.warden.v1beta2.EventCreateSpace is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventCreateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventCreateSpace does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventCreateSpace) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventCreateSpace.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventCreateSpace.creator":
		return protoreflect.ValueOfString("")
	case "warden.warden.v1beta2.EventCreateSpace.owners_count":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventCreateSpace.admin_rule_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventCreateSpace.sign_rule_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventCreateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventCreateSpace does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventCreateSpace) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventCreateSpace", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventCreateSpace) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventCreateSpace) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventCreateSpace) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventCreateSpace) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventCreateSpace)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.OwnersCount != 0 {
			n += 1 + runtime.Sov(uint64(x.OwnersCount))
		}
		if x.AdminRuleId != 0 {
			n += 1 + runtime.Sov(uint64(x.AdminRuleId))
		}
		if x.SignRuleId != 0 {
			n += 1 + runtime.Sov(uint64(x.SignRuleId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventCreateSpace)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SignRuleId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignRuleId))
			i--
			dAtA[i] = 0x28
		}
		if x.AdminRuleId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.AdminRuleId))
			i--
			dAtA[i] = 0x20
		}
		if x.OwnersCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OwnersCount))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventCreateSpace)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventCreateSpace: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventCreateSpace: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OwnersCount", wireType)
				}
				x.OwnersCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OwnersCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AdminRuleId", wireType)
				}
				x.AdminRuleId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.AdminRuleId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignRuleId", wireType)
				}
				x.SignRuleId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignRuleId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventUpdateSpace               protoreflect.MessageDescriptor
	fd_EventUpdateSpace_space_id      protoreflect.FieldDescriptor
	fd_EventUpdateSpace_admin_rule_id protoreflect.FieldDescriptor
	fd_EventUpdateSpace_sign_rule_id  protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventUpdateSpace = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventUpdateSpace")
	fd_EventUpdateSpace_space_id = md_EventUpdateSpace.Fields().ByName("space_id")
	fd_EventUpdateSpace_admin_rule_id = md_EventUpdateSpace.Fields().ByName("admin_rule_id")
	fd_EventUpdateSpace_sign_rule_id = md_EventUpdateSpace.Fields().ByName("sign_rule_id")
}

var _ protoreflect.Message = (*fastReflection_EventUpdateSpace)(nil)

type fastReflection_EventUpdateSpace EventUpdateSpace

func (x *EventUpdateSpace) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventUpdateSpace)(x)
}

func (x *EventUpdateSpace) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventUpdateSpace_messageType fastReflection_EventUpdateSpace_messageType
var _ protoreflect.MessageType = fastReflection_EventUpdateSpace_messageType{}

type fastReflection_EventUpdateSpace_messageType struct{}

func (x fastReflection_EventUpdateSpace_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventUpdateSpace)(nil)
}
func (x fastReflection_EventUpdateSpace_messageType) New() protoreflect.Message {
	return new(fastReflection_EventUpdateSpace)
}
func (x fastReflection_EventUpdateSpace_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventUpdateSpace
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventUpdateSpace) Descriptor() protoreflect.MessageDescriptor {
	return md_EventUpdateSpace
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventUpdateSpace) Type() protoreflect.MessageType {
	return _fastReflection_EventUpdateSpace_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventUpdateSpace) New() protoreflect.Message {
	return new(fastReflection_EventUpdateSpace)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventUpdateSpace) Interface() protoreflect.ProtoMessage {
	return (*EventUpdateSpace)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventUpdateSpace) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SpaceId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SpaceId)
		if !f(fd_EventUpdateSpace_space_id, value) {
			return
		}
	}
	if x.AdminRuleId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.AdminRuleId)
		if !f(fd_EventUpdateSpace_admin_rule_id, value) {
			return
		}
	}
	if x.SignRuleId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SignRuleId)
		if !f(fd_EventUpdateSpace_sign_rule_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventUpdateSpace) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateSpace.space_id":
		return x.SpaceId != uint64(0)
	case "warden.warden.v1beta2.EventUpdateSpace.admin_rule_id":
		return x.AdminRuleId != uint64(0)
	case "warden.warden.v1beta2.EventUpdateSpace.sign_rule_id":
		return x.SignRuleId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateSpace does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateSpace) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateSpace.space_id":
		x.SpaceId = uint64(0)
	case "warden.warden.v1beta2.EventUpdateSpace.admin_rule_id":
		x.AdminRuleId = uint64(0)
	case "warden.warden.v1beta2.EventUpdateSpace.sign_rule_id":
		x.SignRuleId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateSpace does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventUpdateSpace) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventUpdateSpace.space_id":
		value := x.SpaceId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventUpdateSpace.admin_rule_id":
		value := x.AdminRuleId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventUpdateSpace.sign_rule_id":
		value := x.SignRuleId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateSpace does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateSpace) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateSpace.space_id":
		x.SpaceId = value.Uint()
	case "warden.warden.v1beta2.EventUpdateSpace.admin_rule_id":
		x.AdminRuleId = value.Uint()
	case "warden.warden.v1beta2.EventUpdateSpace.sign_rule_id":
		x.SignRuleId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateSpace does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateSpace) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateSpace.space_id":
		panic(fmt.Errorf("field space_id of message warden.warden.v1beta2.EventUpdateSpace is not mutable"))
	case "warden.warden.v1beta2.EventUpdateSpace.admin_rule_id":
		panic(fmt.Errorf("field admin_rule_id of message warden.warden.v1beta2.EventUpdateSpace is not mutable"))
	case "warden.warden.v1beta2.EventUpdateSpace.sign_rule_id":
		panic(fmt.Errorf("field sign_rule_id of message warden.warden.v1beta2.EventUpdateSpace is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateSpace does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventUpdateSpace) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateSpace.space_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventUpdateSpace.admin_rule_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventUpdateSpace.sign_rule_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateSpace"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateSpace does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventUpdateSpace) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventUpdateSpace", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventUpdateSpace) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateSpace) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventUpdateSpace) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventUpdateSpace) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventUpdateSpace)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.SpaceId != 0 {
			n += 1 + runtime.Sov(uint64(x.SpaceId))
		}
		if x.AdminRuleId != 0 {
			n += 1 + runtime.Sov(uint64(x.AdminRuleId))
		}
		if x.SignRuleId != 0 {
			n += 1 + runtime.Sov(uint64(x.SignRuleId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventUpdateSpace)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SignRuleId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignRuleId))
			i--
			dAtA[i] = 0x18
		}
		if x.AdminRuleId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.AdminRuleId))
			i--
			dAtA[i] = 0x10
		}
		if x.SpaceId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SpaceId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventUpdateSpace)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventUpdateSpace: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventUpdateSpace: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SpaceId", wireType)
				}
				x.SpaceId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SpaceId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AdminRuleId", wireType)
				}
				x.AdminRuleId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.AdminRuleId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignRuleId", wireType)
				}
				x.SignRuleId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignRuleId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventAddSpaceOwner              protoreflect.MessageDescriptor
	fd_EventAddSpaceOwner_space_id     protoreflect.FieldDescriptor
	fd_EventAddSpaceOwner_new_owner    protoreflect.FieldDescriptor
	fd_EventAddSpaceOwner_owners_count protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventAddSpaceOwner = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventAddSpaceOwner")
	fd_EventAddSpaceOwner_space_id = md_EventAddSpaceOwner.Fields().ByName("space_id")
	fd_EventAddSpaceOwner_new_owner = md_EventAddSpaceOwner.Fields().ByName("new_owner")
	fd_EventAddSpaceOwner_owners_count = md_EventAddSpaceOwner.Fields().ByName("owners_count")
}

var _ protoreflect.Message = (*fastReflection_EventAddSpaceOwner)(nil)

type fastReflection_EventAddSpaceOwner EventAddSpaceOwner

func (x *EventAddSpaceOwner) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventAddSpaceOwner)(x)
}

func (x *EventAddSpaceOwner) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventAddSpaceOwner_messageType fastReflection_EventAddSpaceOwner_messageType
var _ protoreflect.MessageType = fastReflection_EventAddSpaceOwner_messageType{}

type fastReflection_EventAddSpaceOwner_messageType struct{}

func (x fastReflection_EventAddSpaceOwner_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventAddSpaceOwner)(nil)
}
func (x fastReflection_EventAddSpaceOwner_messageType) New() protoreflect.Message {
	return new(fastReflection_EventAddSpaceOwner)
}
func (x fastReflection_EventAddSpaceOwner_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventAddSpaceOwner
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventAddSpaceOwner) Descriptor() protoreflect.MessageDescriptor {
	return md_EventAddSpaceOwner
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventAddSpaceOwner) Type() protoreflect.MessageType {
	return _fastReflection_EventAddSpaceOwner_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventAddSpaceOwner) New() protoreflect.Message {
	return new(fastReflection_EventAddSpaceOwner)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventAddSpaceOwner) Interface() protoreflect.ProtoMessage {
	return (*EventAddSpaceOwner)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventAddSpaceOwner) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SpaceId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SpaceId)
		if !f(fd_EventAddSpaceOwner_space_id, value) {
			return
		}
	}
	if x.NewOwner != "" {
		value := protoreflect.ValueOfString(x.NewOwner)
		if !f(fd_EventAddSpaceOwner_new_owner, value) {
			return
		}
	}
	if x.OwnersCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.OwnersCount)
		if !f(fd_EventAddSpaceOwner_owners_count, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventAddSpaceOwner) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddSpaceOwner.space_id":
		return x.SpaceId != uint64(0)
	case "warden.warden.v1beta2.EventAddSpaceOwner.new_owner":
		return x.NewOwner != ""
	case "warden.warden.v1beta2.EventAddSpaceOwner.owners_count":
		return x.OwnersCount != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAddSpaceOwner) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddSpaceOwner.space_id":
		x.SpaceId = uint64(0)
	case "warden.warden.v1beta2.EventAddSpaceOwner.new_owner":
		x.NewOwner = ""
	case "warden.warden.v1beta2.EventAddSpaceOwner.owners_count":
		x.OwnersCount = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventAddSpaceOwner) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventAddSpaceOwner.space_id":
		value := x.SpaceId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventAddSpaceOwner.new_owner":
		value := x.NewOwner
		return protoreflect.ValueOfString(value)
	case "warden.warden.v1beta2.EventAddSpaceOwner.owners_count":
		value := x.OwnersCount
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddSpaceOwner does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAddSpaceOwner) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddSpaceOwner.space_id":
		x.SpaceId = value.Uint()
	case "warden.warden.v1beta2.EventAddSpaceOwner.new_owner":
		x.NewOwner = value.Interface().(string)
	case "warden.warden.v1beta2.EventAddSpaceOwner.owners_count":
		x.OwnersCount = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAddSpaceOwner) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddSpaceOwner.space_id":
		panic(fmt.Errorf("field space_id of message warden.warden.v1beta2.EventAddSpaceOwner is not mutable"))
	case "warden.warden.v1beta2.EventAddSpaceOwner.new_owner":
		panic(fmt.Errorf("field new_owner of message warden.warden.v1beta2.EventAddSpaceOwner is not mutable"))
	case "warden.warden.v1beta2.EventAddSpaceOwner.owners_count":
		panic(fmt.Errorf("field owners_count of message warden.warden.v1beta2.EventAddSpaceOwner is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventAddSpaceOwner) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddSpaceOwner.space_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventAddSpaceOwner.new_owner":
		return protoreflect.ValueOfString("")
	case "warden.warden.v1beta2.EventAddSpaceOwner.owners_count":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventAddSpaceOwner) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventAddSpaceOwner", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventAddSpaceOwner) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAddSpaceOwner) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventAddSpaceOwner) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventAddSpaceOwner) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventAddSpaceOwner)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.SpaceId != 0 {
			n += 1 + runtime.Sov(uint64(x.SpaceId))
		}
		l = len(x.NewOwner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.OwnersCount != 0 {
			n += 1 + runtime.Sov(uint64(x.OwnersCount))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventAddSpaceOwner)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.OwnersCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OwnersCount))
			i--
			dAtA[i] = 0x18
		}
		if len(x.NewOwner) > 0 {
			i -= len(x.NewOwner)
			copy(dAtA[i:], x.NewOwner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NewOwner)))
			i--
			dAtA[i] = 0x12
		}
		if x.SpaceId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SpaceId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventAddSpaceOwner)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventAddSpaceOwner: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventAddSpaceOwner: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SpaceId", wireType)
				}
				x.SpaceId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SpaceId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NewOwner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NewOwner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OwnersCount", wireType)
				}
				x.OwnersCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OwnersCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventRemoveSpaceOwner               protoreflect.MessageDescriptor
	fd_EventRemoveSpaceOwner_space_id      protoreflect.FieldDescriptor
	fd_EventRemoveSpaceOwner_removed_owner protoreflect.FieldDescriptor
	fd_EventRemoveSpaceOwner_owners_count  protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventRemoveSpaceOwner = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventRemoveSpaceOwner")
	fd_EventRemoveSpaceOwner_space_id = md_EventRemoveSpaceOwner.Fields().ByName("space_id")
	fd_EventRemoveSpaceOwner_removed_owner = md_EventRemoveSpaceOwner.Fields().ByName("removed_owner")
	fd_EventRemoveSpaceOwner_owners_count = md_EventRemoveSpaceOwner.Fields().ByName("owners_count")
}

var _ protoreflect.Message = (*fastReflection_EventRemoveSpaceOwner)(nil)

type fastReflection_EventRemoveSpaceOwner EventRemoveSpaceOwner

func (x *EventRemoveSpaceOwner) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventRemoveSpaceOwner)(x)
}

func (x *EventRemoveSpaceOwner) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventRemoveSpaceOwner_messageType fastReflection_EventRemoveSpaceOwner_messageType
var _ protoreflect.MessageType = fastReflection_EventRemoveSpaceOwner_messageType{}

type fastReflection_EventRemoveSpaceOwner_messageType struct{}

func (x fastReflection_EventRemoveSpaceOwner_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventRemoveSpaceOwner)(nil)
}
func (x fastReflection_EventRemoveSpaceOwner_messageType) New() protoreflect.Message {
	return new(fastReflection_EventRemoveSpaceOwner)
}
func (x fastReflection_EventRemoveSpaceOwner_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventRemoveSpaceOwner
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventRemoveSpaceOwner) Descriptor() protoreflect.MessageDescriptor {
	return md_EventRemoveSpaceOwner
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventRemoveSpaceOwner) Type() protoreflect.MessageType {
	return _fastReflection_EventRemoveSpaceOwner_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventRemoveSpaceOwner) New() protoreflect.Message {
	return new(fastReflection_EventRemoveSpaceOwner)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventRemoveSpaceOwner) Interface() protoreflect.ProtoMessage {
	return (*EventRemoveSpaceOwner)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventRemoveSpaceOwner) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SpaceId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SpaceId)
		if !f(fd_EventRemoveSpaceOwner_space_id, value) {
			return
		}
	}
	if x.RemovedOwner != "" {
		value := protoreflect.ValueOfString(x.RemovedOwner)
		if !f(fd_EventRemoveSpaceOwner_removed_owner, value) {
			return
		}
	}
	if x.OwnersCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.OwnersCount)
		if !f(fd_EventRemoveSpaceOwner_owners_count, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventRemoveSpaceOwner) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.space_id":
		return x.SpaceId != uint64(0)
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.removed_owner":
		return x.RemovedOwner != ""
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.owners_count":
		return x.OwnersCount != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRemoveSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRemoveSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRemoveSpaceOwner) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.space_id":
		x.SpaceId = uint64(0)
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.removed_owner":
		x.RemovedOwner = ""
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.owners_count":
		x.OwnersCount = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRemoveSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRemoveSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventRemoveSpaceOwner) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.space_id":
		value := x.SpaceId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.removed_owner":
		value := x.RemovedOwner
		return protoreflect.ValueOfString(value)
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.owners_count":
		value := x.OwnersCount
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRemoveSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRemoveSpaceOwner does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRemoveSpaceOwner) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.space_id":
		x.SpaceId = value.Uint()
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.removed_owner":
		x.RemovedOwner = value.Interface().(string)
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.owners_count":
		x.OwnersCount = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRemoveSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRemoveSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRemoveSpaceOwner) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.space_id":
		panic(fmt.Errorf("field space_id of message warden.warden.v1beta2.EventRemoveSpaceOwner is not mutable"))
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.removed_owner":
		panic(fmt.Errorf("field removed_owner of message warden.warden.v1beta2.EventRemoveSpaceOwner is not mutable"))
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.owners_count":
		panic(fmt.Errorf("field owners_count of message warden.warden.v1beta2.EventRemoveSpaceOwner is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRemoveSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRemoveSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventRemoveSpaceOwner) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.space_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.removed_owner":
		return protoreflect.ValueOfString("")
	case "warden.warden.v1beta2.EventRemoveSpaceOwner.owners_count":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRemoveSpaceOwner"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRemoveSpaceOwner does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventRemoveSpaceOwner) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventRemoveSpaceOwner", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventRemoveSpaceOwner) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRemoveSpaceOwner) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventRemoveSpaceOwner) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventRemoveSpaceOwner) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventRemoveSpaceOwner)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.SpaceId != 0 {
			n += 1 + runtime.Sov(uint64(x.SpaceId))
		}
		l = len(x.RemovedOwner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.OwnersCount != 0 {
			n += 1 + runtime.Sov(uint64(x.OwnersCount))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventRemoveSpaceOwner)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.OwnersCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.OwnersCount))
			i--
			dAtA[i] = 0x18
		}
		if len(x.RemovedOwner) > 0 {
			i -= len(x.RemovedOwner)
			copy(dAtA[i:], x.RemovedOwner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemovedOwner)))
			i--
			dAtA[i] = 0x12
		}
		if x.SpaceId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SpaceId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventRemoveSpaceOwner)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventRemoveSpaceOwner: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventRemoveSpaceOwner: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SpaceId", wireType)
				}
				x.SpaceId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SpaceId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemovedOwner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemovedOwner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OwnersCount", wireType)
				}
				x.OwnersCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.OwnersCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventNewKeyRequest             protoreflect.MessageDescriptor
	fd_EventNewKeyRequest_id          protoreflect.FieldDescriptor
	fd_EventNewKeyRequest_space_id    protoreflect.FieldDescriptor
	fd_EventNewKeyRequest_keychain_id protoreflect.FieldDescriptor
	fd_EventNewKeyRequest_rule_id     protoreflect.FieldDescriptor
	fd_EventNewKeyRequest_key_type    protoreflect.FieldDescriptor
	fd_EventNewKeyRequest_creator     protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventNewKeyRequest = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventNewKeyRequest")
	fd_EventNewKeyRequest_id = md_EventNewKeyRequest.Fields().ByName("id")
	fd_EventNewKeyRequest_space_id = md_EventNewKeyRequest.Fields().ByName("space_id")
	fd_EventNewKeyRequest_keychain_id = md_EventNewKeyRequest.Fields().ByName("keychain_id")
	fd_EventNewKeyRequest_rule_id = md_EventNewKeyRequest.Fields().ByName("rule_id")
	fd_EventNewKeyRequest_key_type = md_EventNewKeyRequest.Fields().ByName("key_type")
	fd_EventNewKeyRequest_creator = md_EventNewKeyRequest.Fields().ByName("creator")
}

var _ protoreflect.Message = (*fastReflection_EventNewKeyRequest)(nil)

type fastReflection_EventNewKeyRequest EventNewKeyRequest

func (x *EventNewKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventNewKeyRequest)(x)
}

func (x *EventNewKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventNewKeyRequest_messageType fastReflection_EventNewKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_EventNewKeyRequest_messageType{}

type fastReflection_EventNewKeyRequest_messageType struct{}

func (x fastReflection_EventNewKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventNewKeyRequest)(nil)
}
func (x fastReflection_EventNewKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_EventNewKeyRequest)
}
func (x fastReflection_EventNewKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNewKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventNewKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNewKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventNewKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_EventNewKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventNewKeyRequest) New() protoreflect.Message {
	return new(fastReflection_EventNewKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventNewKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*EventNewKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventNewKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventNewKeyRequest_id, value) {
			return
		}
	}
	if x.SpaceId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SpaceId)
		if !f(fd_EventNewKeyRequest_space_id, value) {
			return
		}
	}
	if x.KeychainId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeychainId)
		if !f(fd_EventNewKeyRequest_keychain_id, value) {
			return
		}
	}
	if x.RuleId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RuleId)
		if !f(fd_EventNewKeyRequest_rule_id, value) {
			return
		}
	}
	if x.KeyType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.KeyType))
		if !f(fd_EventNewKeyRequest_key_type, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_EventNewKeyRequest_creator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventNewKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeyRequest.id":
		return x.Id != uint64(0)
	case "warden.warden.v1beta2.EventNewKeyRequest.space_id":
		return x.SpaceId != uint64(0)
	case "warden.warden.v1beta2.EventNewKeyRequest.keychain_id":
		return x.KeychainId != uint64(0)
	case "warden.warden.v1beta2.EventNewKeyRequest.rule_id":
		return x.RuleId != uint64(0)
	case "warden.warden.v1beta2.EventNewKeyRequest.key_type":
		return x.KeyType != 0
	case "warden.warden.v1beta2.EventNewKeyRequest.creator":
		return x.Creator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeyRequest.id":
		x.Id = uint64(0)
	case "warden.warden.v1beta2.EventNewKeyRequest.space_id":
		x.SpaceId = uint64(0)
	case "warden.warden.v1beta2.EventNewKeyRequest.keychain_id":
		x.KeychainId = uint64(0)
	case "warden.warden.v1beta2.EventNewKeyRequest.rule_id":
		x.RuleId = uint64(0)
	case "warden.warden.v1beta2.EventNewKeyRequest.key_type":
		x.KeyType = 0
	case "warden.warden.v1beta2.EventNewKeyRequest.creator":
		x.Creator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventNewKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventNewKeyRequest.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewKeyRequest.space_id":
		value := x.SpaceId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewKeyRequest.keychain_id":
		value := x.KeychainId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewKeyRequest.rule_id":
		value := x.RuleId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewKeyRequest.key_type":
		value := x.KeyType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "warden.warden.v1beta2.EventNewKeyRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeyRequest.id":
		x.Id = value.Uint()
	case "warden.warden.v1beta2.EventNewKeyRequest.space_id":
		x.SpaceId = value.Uint()
	case "warden.warden.v1beta2.EventNewKeyRequest.keychain_id":
		x.KeychainId = value.Uint()
	case "warden.warden.v1beta2.EventNewKeyRequest.rule_id":
		x.RuleId = value.Uint()
	case "warden.warden.v1beta2.EventNewKeyRequest.key_type":
		x.KeyType = (KeyType)(value.Enum())
	case "warden.warden.v1beta2.EventNewKeyRequest.creator":
		x.Creator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeyRequest.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventNewKeyRequest is not mutable"))
	case "warden.warden.v1beta2.EventNewKeyRequest.space_id":
		panic(fmt.Errorf("field space_id of message warden.warden.v1beta2.EventNewKeyRequest is not mutable"))
	case "warden.warden.v1beta2.EventNewKeyRequest.keychain_id":
		panic(fmt.Errorf("field keychain_id of message warden.warden.v1beta2.EventNewKeyRequest is not mutable"))
	case "warden.warden.v1beta2.EventNewKeyRequest.rule_id":
		panic(fmt.Errorf("field rule_id of message warden.warden.v1beta2.EventNewKeyRequest is not mutable"))
	case "warden.warden.v1beta2.EventNewKeyRequest.key_type":
		panic(fmt.Errorf("field key_type of message warden.warden.v1beta2.EventNewKeyRequest is not mutable"))
	case "warden.warden.v1beta2.EventNewKeyRequest.creator":
		panic(fmt.Errorf("field creator of message warden.warden.v1beta2.EventNewKeyRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventNewKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeyRequest.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewKeyRequest.space_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewKeyRequest.keychain_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewKeyRequest.rule_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewKeyRequest.key_type":
		return protoreflect.ValueOfEnum(0)
	case "warden.warden.v1beta2.EventNewKeyRequest.creator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventNewKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventNewKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventNewKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventNewKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventNewKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventNewKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.SpaceId != 0 {
			n += 1 + runtime.Sov(uint64(x.SpaceId))
		}
		if x.KeychainId != 0 {
			n += 1 + runtime.Sov(uint64(x.KeychainId))
		}
		if x.RuleId != 0 {
			n += 1 + runtime.Sov(uint64(x.RuleId))
		}
		if x.KeyType != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyType))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventNewKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x32
		}
		if x.KeyType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyType))
			i--
			dAtA[i] = 0x28
		}
		if x.RuleId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RuleId))
			i--
			dAtA[i] = 0x20
		}
		if x.KeychainId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeychainId))
			i--
			dAtA[i] = 0x18
		}
		if x.SpaceId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SpaceId))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventNewKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNewKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNewKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SpaceId", wireType)
				}
				x.SpaceId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SpaceId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeychainId", wireType)
				}
				x.KeychainId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeychainId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RuleId", wireType)
				}
				x.RuleId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RuleId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyType", wireType)
				}
				x.KeyType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyType |= KeyType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventNewKey             protoreflect.MessageDescriptor
	fd_EventNewKey_id          protoreflect.FieldDescriptor
	fd_EventNewKey_key_type    protoreflect.FieldDescriptor
	fd_EventNewKey_space_id    protoreflect.FieldDescriptor
	fd_EventNewKey_keychain_id protoreflect.FieldDescriptor
	fd_EventNewKey_rule_id     protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventNewKey = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventNewKey")
	fd_EventNewKey_id = md_EventNewKey.Fields().ByName("id")
	fd_EventNewKey_key_type = md_EventNewKey.Fields().ByName("key_type")
	fd_EventNewKey_space_id = md_EventNewKey.Fields().ByName("space_id")
	fd_EventNewKey_keychain_id = md_EventNewKey.Fields().ByName("keychain_id")
	fd_EventNewKey_rule_id = md_EventNewKey.Fields().ByName("rule_id")
}

var _ protoreflect.Message = (*fastReflection_EventNewKey)(nil)

type fastReflection_EventNewKey EventNewKey

func (x *EventNewKey) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventNewKey)(x)
}

func (x *EventNewKey) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventNewKey_messageType fastReflection_EventNewKey_messageType
var _ protoreflect.MessageType = fastReflection_EventNewKey_messageType{}

type fastReflection_EventNewKey_messageType struct{}

func (x fastReflection_EventNewKey_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventNewKey)(nil)
}
func (x fastReflection_EventNewKey_messageType) New() protoreflect.Message {
	return new(fastReflection_EventNewKey)
}
func (x fastReflection_EventNewKey_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNewKey
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventNewKey) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNewKey
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventNewKey) Type() protoreflect.MessageType {
	return _fastReflection_EventNewKey_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventNewKey) New() protoreflect.Message {
	return new(fastReflection_EventNewKey)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventNewKey) Interface() protoreflect.ProtoMessage {
	return (*EventNewKey)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventNewKey) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventNewKey_id, value) {
			return
		}
	}
	if x.KeyType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.KeyType))
		if !f(fd_EventNewKey_key_type, value) {
			return
		}
	}
	if x.SpaceId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SpaceId)
		if !f(fd_EventNewKey_space_id, value) {
			return
		}
	}
	if x.KeychainId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeychainId)
		if !f(fd_EventNewKey_keychain_id, value) {
			return
		}
	}
	if x.RuleId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RuleId)
		if !f(fd_EventNewKey_rule_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventNewKey) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKey.id":
		return x.Id != uint64(0)
	case "warden.warden.v1beta2.EventNewKey.key_type":
		return x.KeyType != 0
	case "warden.warden.v1beta2.EventNewKey.space_id":
		return x.SpaceId != uint64(0)
	case "warden.warden.v1beta2.EventNewKey.keychain_id":
		return x.KeychainId != uint64(0)
	case "warden.warden.v1beta2.EventNewKey.rule_id":
		return x.RuleId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKey does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKey) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKey.id":
		x.Id = uint64(0)
	case "warden.warden.v1beta2.EventNewKey.key_type":
		x.KeyType = 0
	case "warden.warden.v1beta2.EventNewKey.space_id":
		x.SpaceId = uint64(0)
	case "warden.warden.v1beta2.EventNewKey.keychain_id":
		x.KeychainId = uint64(0)
	case "warden.warden.v1beta2.EventNewKey.rule_id":
		x.RuleId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKey does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventNewKey) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventNewKey.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewKey.key_type":
		value := x.KeyType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "warden.warden.v1beta2.EventNewKey.space_id":
		value := x.SpaceId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewKey.keychain_id":
		value := x.KeychainId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewKey.rule_id":
		value := x.RuleId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKey does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKey) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKey.id":
		x.Id = value.Uint()
	case "warden.warden.v1beta2.EventNewKey.key_type":
		x.KeyType = (KeyType)(value.Enum())
	case "warden.warden.v1beta2.EventNewKey.space_id":
		x.SpaceId = value.Uint()
	case "warden.warden.v1beta2.EventNewKey.keychain_id":
		x.KeychainId = value.Uint()
	case "warden.warden.v1beta2.EventNewKey.rule_id":
		x.RuleId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKey does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKey) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKey.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventNewKey is not mutable"))
	case "warden.warden.v1beta2.EventNewKey.key_type":
		panic(fmt.Errorf("field key_type of message warden.warden.v1beta2.EventNewKey is not mutable"))
	case "warden.warden.v1beta2.EventNewKey.space_id":
		panic(fmt.Errorf("field space_id of message warden.warden.v1beta2.EventNewKey is not mutable"))
	case "warden.warden.v1beta2.EventNewKey.keychain_id":
		panic(fmt.Errorf("field keychain_id of message warden.warden.v1beta2.EventNewKey is not mutable"))
	case "warden.warden.v1beta2.EventNewKey.rule_id":
		panic(fmt.Errorf("field rule_id of message warden.warden.v1beta2.EventNewKey is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKey does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventNewKey) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKey.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewKey.key_type":
		return protoreflect.ValueOfEnum(0)
	case "warden.warden.v1beta2.EventNewKey.space_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewKey.keychain_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewKey.rule_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKey does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventNewKey) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventNewKey", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventNewKey) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKey) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventNewKey) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventNewKey) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventNewKey)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.KeyType != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyType))
		}
		if x.SpaceId != 0 {
			n += 1 + runtime.Sov(uint64(x.SpaceId))
		}
		if x.KeychainId != 0 {
			n += 1 + runtime.Sov(uint64(x.KeychainId))
		}
		if x.RuleId != 0 {
			n += 1 + runtime.Sov(uint64(x.RuleId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventNewKey)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RuleId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RuleId))
			i--
			dAtA[i] = 0x28
		}
		if x.KeychainId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeychainId))
			i--
			dAtA[i] = 0x20
		}
		if x.SpaceId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SpaceId))
			i--
			dAtA[i] = 0x18
		}
		if x.KeyType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyType))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventNewKey)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNewKey: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNewKey: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyType", wireType)
				}
				x.KeyType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyType |= KeyType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SpaceId", wireType)
				}
				x.SpaceId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SpaceId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeychainId", wireType)
				}
				x.KeychainId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeychainId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RuleId", wireType)
				}
				x.RuleId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RuleId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventRejectKeyRequest    protoreflect.MessageDescriptor
	fd_EventRejectKeyRequest_id protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventRejectKeyRequest = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventRejectKeyRequest")
	fd_EventRejectKeyRequest_id = md_EventRejectKeyRequest.Fields().ByName("id")
}

var _ protoreflect.Message = (*fastReflection_EventRejectKeyRequest)(nil)

type fastReflection_EventRejectKeyRequest EventRejectKeyRequest

func (x *EventRejectKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventRejectKeyRequest)(x)
}

func (x *EventRejectKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventRejectKeyRequest_messageType fastReflection_EventRejectKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_EventRejectKeyRequest_messageType{}

type fastReflection_EventRejectKeyRequest_messageType struct{}

func (x fastReflection_EventRejectKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventRejectKeyRequest)(nil)
}
func (x fastReflection_EventRejectKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_EventRejectKeyRequest)
}
func (x fastReflection_EventRejectKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventRejectKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventRejectKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_EventRejectKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventRejectKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_EventRejectKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventRejectKeyRequest) New() protoreflect.Message {
	return new(fastReflection_EventRejectKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventRejectKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*EventRejectKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventRejectKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventRejectKeyRequest_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventRejectKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectKeyRequest.id":
		return x.Id != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRejectKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectKeyRequest.id":
		x.Id = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventRejectKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventRejectKeyRequest.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRejectKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectKeyRequest.id":
		x.Id = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRejectKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectKeyRequest.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventRejectKeyRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventRejectKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectKeyRequest.id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectKeyRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventRejectKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventRejectKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventRejectKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRejectKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventRejectKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventRejectKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventRejectKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventRejectKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventRejectKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventRejectKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventRejectKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventUpdateKey         protoreflect.MessageDescriptor
	fd_EventUpdateKey_id      protoreflect.FieldDescriptor
	fd_EventUpdateKey_rule_id protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventUpdateKey = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventUpdateKey")
	fd_EventUpdateKey_id = md_EventUpdateKey.Fields().ByName("id")
	fd_EventUpdateKey_rule_id = md_EventUpdateKey.Fields().ByName("rule_id")
}

var _ protoreflect.Message = (*fastReflection_EventUpdateKey)(nil)

type fastReflection_EventUpdateKey EventUpdateKey

func (x *EventUpdateKey) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventUpdateKey)(x)
}

func (x *EventUpdateKey) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventUpdateKey_messageType fastReflection_EventUpdateKey_messageType
var _ protoreflect.MessageType = fastReflection_EventUpdateKey_messageType{}

type fastReflection_EventUpdateKey_messageType struct{}

func (x fastReflection_EventUpdateKey_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventUpdateKey)(nil)
}
func (x fastReflection_EventUpdateKey_messageType) New() protoreflect.Message {
	return new(fastReflection_EventUpdateKey)
}
func (x fastReflection_EventUpdateKey_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventUpdateKey
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventUpdateKey) Descriptor() protoreflect.MessageDescriptor {
	return md_EventUpdateKey
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventUpdateKey) Type() protoreflect.MessageType {
	return _fastReflection_EventUpdateKey_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventUpdateKey) New() protoreflect.Message {
	return new(fastReflection_EventUpdateKey)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventUpdateKey) Interface() protoreflect.ProtoMessage {
	return (*EventUpdateKey)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventUpdateKey) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventUpdateKey_id, value) {
			return
		}
	}
	if x.RuleId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RuleId)
		if !f(fd_EventUpdateKey_rule_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventUpdateKey) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKey.id":
		return x.Id != uint64(0)
	case "warden.warden.v1beta2.EventUpdateKey.rule_id":
		return x.RuleId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKey does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateKey) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKey.id":
		x.Id = uint64(0)
	case "warden.warden.v1beta2.EventUpdateKey.rule_id":
		x.RuleId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKey does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventUpdateKey) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventUpdateKey.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventUpdateKey.rule_id":
		value := x.RuleId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKey does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateKey) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKey.id":
		x.Id = value.Uint()
	case "warden.warden.v1beta2.EventUpdateKey.rule_id":
		x.RuleId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKey does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateKey) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKey.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventUpdateKey is not mutable"))
	case "warden.warden.v1beta2.EventUpdateKey.rule_id":
		panic(fmt.Errorf("field rule_id of message warden.warden.v1beta2.EventUpdateKey is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKey does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventUpdateKey) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKey.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventUpdateKey.rule_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKey"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKey does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventUpdateKey) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventUpdateKey", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventUpdateKey) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateKey) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventUpdateKey) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventUpdateKey) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventUpdateKey)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.RuleId != 0 {
			n += 1 + runtime.Sov(uint64(x.RuleId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventUpdateKey)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RuleId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RuleId))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventUpdateKey)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventUpdateKey: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventUpdateKey: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RuleId", wireType)
				}
				x.RuleId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RuleId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventNewSignatureRequest         protoreflect.MessageDescriptor
	fd_EventNewSignatureRequest_id      protoreflect.FieldDescriptor
	fd_EventNewSignatureRequest_key_id  protoreflect.FieldDescriptor
	fd_EventNewSignatureRequest_creator protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventNewSignatureRequest = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventNewSignatureRequest")
	fd_EventNewSignatureRequest_id = md_EventNewSignatureRequest.Fields().ByName("id")
	fd_EventNewSignatureRequest_key_id = md_EventNewSignatureRequest.Fields().ByName("key_id")
	fd_EventNewSignatureRequest_creator = md_EventNewSignatureRequest.Fields().ByName("creator")
}

var _ protoreflect.Message = (*fastReflection_EventNewSignatureRequest)(nil)

type fastReflection_EventNewSignatureRequest EventNewSignatureRequest

func (x *EventNewSignatureRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventNewSignatureRequest)(x)
}

func (x *EventNewSignatureRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventNewSignatureRequest_messageType fastReflection_EventNewSignatureRequest_messageType
var _ protoreflect.MessageType = fastReflection_EventNewSignatureRequest_messageType{}

type fastReflection_EventNewSignatureRequest_messageType struct{}

func (x fastReflection_EventNewSignatureRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventNewSignatureRequest)(nil)
}
func (x fastReflection_EventNewSignatureRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_EventNewSignatureRequest)
}
func (x fastReflection_EventNewSignatureRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNewSignatureRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventNewSignatureRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNewSignatureRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventNewSignatureRequest) Type() protoreflect.MessageType {
	return _fastReflection_EventNewSignatureRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventNewSignatureRequest) New() protoreflect.Message {
	return new(fastReflection_EventNewSignatureRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventNewSignatureRequest) Interface() protoreflect.ProtoMessage {
	return (*EventNewSignatureRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventNewSignatureRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventNewSignatureRequest_id, value) {
			return
		}
	}
	if x.KeyId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeyId)
		if !f(fd_EventNewSignatureRequest_key_id, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_EventNewSignatureRequest_creator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventNewSignatureRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewSignatureRequest.id":
		return x.Id != uint64(0)
	case "warden.warden.v1beta2.EventNewSignatureRequest.key_id":
		return x.KeyId != uint64(0)
	case "warden.warden.v1beta2.EventNewSignatureRequest.creator":
		return x.Creator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewSignatureRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewSignatureRequest.id":
		x.Id = uint64(0)
	case "warden.warden.v1beta2.EventNewSignatureRequest.key_id":
		x.KeyId = uint64(0)
	case "warden.warden.v1beta2.EventNewSignatureRequest.creator":
		x.Creator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventNewSignatureRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventNewSignatureRequest.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewSignatureRequest.key_id":
		value := x.KeyId
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewSignatureRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewSignatureRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewSignatureRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewSignatureRequest.id":
		x.Id = value.Uint()
	case "warden.warden.v1beta2.EventNewSignatureRequest.key_id":
		x.KeyId = value.Uint()
	case "warden.warden.v1beta2.EventNewSignatureRequest.creator":
		x.Creator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewSignatureRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewSignatureRequest.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventNewSignatureRequest is not mutable"))
	case "warden.warden.v1beta2.EventNewSignatureRequest.key_id":
		panic(fmt.Errorf("field key_id of message warden.warden.v1beta2.EventNewSignatureRequest is not mutable"))
	case "warden.warden.v1beta2.EventNewSignatureRequest.creator":
		panic(fmt.Errorf("field creator of message warden.warden.v1beta2.EventNewSignatureRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventNewSignatureRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewSignatureRequest.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewSignatureRequest.key_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewSignatureRequest.creator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventNewSignatureRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventNewSignatureRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventNewSignatureRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewSignatureRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventNewSignatureRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventNewSignatureRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventNewSignatureRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.KeyId != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyId))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventNewSignatureRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x1a
		}
		if x.KeyId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyId))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventNewSignatureRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNewSignatureRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNewSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyId", wireType)
				}
				x.KeyId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventFulfilSignatureRequest    protoreflect.MessageDescriptor
	fd_EventFulfilSignatureRequest_id protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventFulfilSignatureRequest = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventFulfilSignatureRequest")
	fd_EventFulfilSignatureRequest_id = md_EventFulfilSignatureRequest.Fields().ByName("id")
}

var _ protoreflect.Message = (*fastReflection_EventFulfilSignatureRequest)(nil)

type fastReflection_EventFulfilSignatureRequest EventFulfilSignatureRequest

func (x *EventFulfilSignatureRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventFulfilSignatureRequest)(x)
}

func (x *EventFulfilSignatureRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventFulfilSignatureRequest_messageType fastReflection_EventFulfilSignatureRequest_messageType
var _ protoreflect.MessageType = fastReflection_EventFulfilSignatureRequest_messageType{}

type fastReflection_EventFulfilSignatureRequest_messageType struct{}

func (x fastReflection_EventFulfilSignatureRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventFulfilSignatureRequest)(nil)
}
func (x fastReflection_EventFulfilSignatureRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_EventFulfilSignatureRequest)
}
func (x fastReflection_EventFulfilSignatureRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventFulfilSignatureRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventFulfilSignatureRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_EventFulfilSignatureRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventFulfilSignatureRequest) Type() protoreflect.MessageType {
	return _fastReflection_EventFulfilSignatureRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventFulfilSignatureRequest) New() protoreflect.Message {
	return new(fastReflection_EventFulfilSignatureRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventFulfilSignatureRequest) Interface() protoreflect.ProtoMessage {
	return (*EventFulfilSignatureRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventFulfilSignatureRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventFulfilSignatureRequest_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventFulfilSignatureRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventFulfilSignatureRequest.id":
		return x.Id != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventFulfilSignatureRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventFulfilSignatureRequest.id":
		x.Id = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventFulfilSignatureRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventFulfilSignatureRequest.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventFulfilSignatureRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventFulfilSignatureRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventFulfilSignatureRequest.id":
		x.Id = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventFulfilSignatureRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventFulfilSignatureRequest.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventFulfilSignatureRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventFulfilSignatureRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventFulfilSignatureRequest.id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventFulfilSignatureRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventFulfilSignatureRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventFulfilSignatureRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventFulfilSignatureRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventFulfilSignatureRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventFulfilSignatureRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventFulfilSignatureRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventFulfilSignatureRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventFulfilSignatureRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventFulfilSignatureRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventFulfilSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventRejectSignatureRequest    protoreflect.MessageDescriptor
	fd_EventRejectSignatureRequest_id protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventRejectSignatureRequest = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventRejectSignatureRequest")
	fd_EventRejectSignatureRequest_id = md_EventRejectSignatureRequest.Fields().ByName("id")
}

var _ protoreflect.Message = (*fastReflection_EventRejectSignatureRequest)(nil)

type fastReflection_EventRejectSignatureRequest EventRejectSignatureRequest

func (x *EventRejectSignatureRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventRejectSignatureRequest)(x)
}

func (x *EventRejectSignatureRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventRejectSignatureRequest_messageType fastReflection_EventRejectSignatureRequest_messageType
var _ protoreflect.MessageType = fastReflection_EventRejectSignatureRequest_messageType{}

type fastReflection_EventRejectSignatureRequest_messageType struct{}

func (x fastReflection_EventRejectSignatureRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventRejectSignatureRequest)(nil)
}
func (x fastReflection_EventRejectSignatureRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_EventRejectSignatureRequest)
}
func (x fastReflection_EventRejectSignatureRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventRejectSignatureRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventRejectSignatureRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_EventRejectSignatureRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventRejectSignatureRequest) Type() protoreflect.MessageType {
	return _fastReflection_EventRejectSignatureRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventRejectSignatureRequest) New() protoreflect.Message {
	return new(fastReflection_EventRejectSignatureRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventRejectSignatureRequest) Interface() protoreflect.ProtoMessage {
	return (*EventRejectSignatureRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventRejectSignatureRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventRejectSignatureRequest_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventRejectSignatureRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectSignatureRequest.id":
		return x.Id != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRejectSignatureRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectSignatureRequest.id":
		x.Id = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventRejectSignatureRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventRejectSignatureRequest.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectSignatureRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRejectSignatureRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectSignatureRequest.id":
		x.Id = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRejectSignatureRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectSignatureRequest.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventRejectSignatureRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventRejectSignatureRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventRejectSignatureRequest.id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventRejectSignatureRequest"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventRejectSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventRejectSignatureRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventRejectSignatureRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventRejectSignatureRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventRejectSignatureRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventRejectSignatureRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventRejectSignatureRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventRejectSignatureRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventRejectSignatureRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventRejectSignatureRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventRejectSignatureRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventRejectSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventNewKeychain               protoreflect.MessageDescriptor
	fd_EventNewKeychain_id            protoreflect.FieldDescriptor
	fd_EventNewKeychain_creator       protoreflect.FieldDescriptor
	fd_EventNewKeychain_keychain_fees protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventNewKeychain = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventNewKeychain")
	fd_EventNewKeychain_id = md_EventNewKeychain.Fields().ByName("id")
	fd_EventNewKeychain_creator = md_EventNewKeychain.Fields().ByName("creator")
	fd_EventNewKeychain_keychain_fees = md_EventNewKeychain.Fields().ByName("keychain_fees")
}

var _ protoreflect.Message = (*fastReflection_EventNewKeychain)(nil)

type fastReflection_EventNewKeychain EventNewKeychain

func (x *EventNewKeychain) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventNewKeychain)(x)
}

func (x *EventNewKeychain) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventNewKeychain_messageType fastReflection_EventNewKeychain_messageType
var _ protoreflect.MessageType = fastReflection_EventNewKeychain_messageType{}

type fastReflection_EventNewKeychain_messageType struct{}

func (x fastReflection_EventNewKeychain_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventNewKeychain)(nil)
}
func (x fastReflection_EventNewKeychain_messageType) New() protoreflect.Message {
	return new(fastReflection_EventNewKeychain)
}
func (x fastReflection_EventNewKeychain_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNewKeychain
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventNewKeychain) Descriptor() protoreflect.MessageDescriptor {
	return md_EventNewKeychain
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventNewKeychain) Type() protoreflect.MessageType {
	return _fastReflection_EventNewKeychain_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventNewKeychain) New() protoreflect.Message {
	return new(fastReflection_EventNewKeychain)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventNewKeychain) Interface() protoreflect.ProtoMessage {
	return (*EventNewKeychain)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventNewKeychain) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventNewKeychain_id, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_EventNewKeychain_creator, value) {
			return
		}
	}
	if x.KeychainFees != nil {
		value := protoreflect.ValueOfMessage(x.KeychainFees.ProtoReflect())
		if !f(fd_EventNewKeychain_keychain_fees, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventNewKeychain) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeychain.id":
		return x.Id != uint64(0)
	case "warden.warden.v1beta2.EventNewKeychain.creator":
		return x.Creator != ""
	case "warden.warden.v1beta2.EventNewKeychain.keychain_fees":
		return x.KeychainFees != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeychain does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKeychain) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeychain.id":
		x.Id = uint64(0)
	case "warden.warden.v1beta2.EventNewKeychain.creator":
		x.Creator = ""
	case "warden.warden.v1beta2.EventNewKeychain.keychain_fees":
		x.KeychainFees = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeychain does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventNewKeychain) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventNewKeychain.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventNewKeychain.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "warden.warden.v1beta2.EventNewKeychain.keychain_fees":
		value := x.KeychainFees
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeychain does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKeychain) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeychain.id":
		x.Id = value.Uint()
	case "warden.warden.v1beta2.EventNewKeychain.creator":
		x.Creator = value.Interface().(string)
	case "warden.warden.v1beta2.EventNewKeychain.keychain_fees":
		x.KeychainFees = value.Message().Interface().(*KeychainFees)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeychain does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKeychain) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeychain.keychain_fees":
		if x.KeychainFees == nil {
			x.KeychainFees = new(KeychainFees)
		}
		return protoreflect.ValueOfMessage(x.KeychainFees.ProtoReflect())
	case "warden.warden.v1beta2.EventNewKeychain.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventNewKeychain is not mutable"))
	case "warden.warden.v1beta2.EventNewKeychain.creator":
		panic(fmt.Errorf("field creator of message warden.warden.v1beta2.EventNewKeychain is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeychain does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventNewKeychain) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventNewKeychain.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventNewKeychain.creator":
		return protoreflect.ValueOfString("")
	case "warden.warden.v1beta2.EventNewKeychain.keychain_fees":
		m := new(KeychainFees)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventNewKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventNewKeychain does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventNewKeychain) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventNewKeychain", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventNewKeychain) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventNewKeychain) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventNewKeychain) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventNewKeychain) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventNewKeychain)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KeychainFees != nil {
			l = options.Size(x.KeychainFees)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventNewKeychain)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.KeychainFees != nil {
			encoded, err := options.Marshal(x.KeychainFees)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventNewKeychain)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNewKeychain: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventNewKeychain: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeychainFees", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.KeychainFees == nil {
					x.KeychainFees = &KeychainFees{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.KeychainFees); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventUpdateKeychain               protoreflect.MessageDescriptor
	fd_EventUpdateKeychain_id            protoreflect.FieldDescriptor
	fd_EventUpdateKeychain_keychain_fees protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventUpdateKeychain = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventUpdateKeychain")
	fd_EventUpdateKeychain_id = md_EventUpdateKeychain.Fields().ByName("id")
	fd_EventUpdateKeychain_keychain_fees = md_EventUpdateKeychain.Fields().ByName("keychain_fees")
}

var _ protoreflect.Message = (*fastReflection_EventUpdateKeychain)(nil)

type fastReflection_EventUpdateKeychain EventUpdateKeychain

func (x *EventUpdateKeychain) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventUpdateKeychain)(x)
}

func (x *EventUpdateKeychain) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventUpdateKeychain_messageType fastReflection_EventUpdateKeychain_messageType
var _ protoreflect.MessageType = fastReflection_EventUpdateKeychain_messageType{}

type fastReflection_EventUpdateKeychain_messageType struct{}

func (x fastReflection_EventUpdateKeychain_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventUpdateKeychain)(nil)
}
func (x fastReflection_EventUpdateKeychain_messageType) New() protoreflect.Message {
	return new(fastReflection_EventUpdateKeychain)
}
func (x fastReflection_EventUpdateKeychain_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventUpdateKeychain
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventUpdateKeychain) Descriptor() protoreflect.MessageDescriptor {
	return md_EventUpdateKeychain
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventUpdateKeychain) Type() protoreflect.MessageType {
	return _fastReflection_EventUpdateKeychain_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventUpdateKeychain) New() protoreflect.Message {
	return new(fastReflection_EventUpdateKeychain)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventUpdateKeychain) Interface() protoreflect.ProtoMessage {
	return (*EventUpdateKeychain)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventUpdateKeychain) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventUpdateKeychain_id, value) {
			return
		}
	}
	if x.KeychainFees != nil {
		value := protoreflect.ValueOfMessage(x.KeychainFees.ProtoReflect())
		if !f(fd_EventUpdateKeychain_keychain_fees, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventUpdateKeychain) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKeychain.id":
		return x.Id != uint64(0)
	case "warden.warden.v1beta2.EventUpdateKeychain.keychain_fees":
		return x.KeychainFees != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKeychain does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateKeychain) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKeychain.id":
		x.Id = uint64(0)
	case "warden.warden.v1beta2.EventUpdateKeychain.keychain_fees":
		x.KeychainFees = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKeychain does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventUpdateKeychain) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventUpdateKeychain.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventUpdateKeychain.keychain_fees":
		value := x.KeychainFees
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKeychain does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateKeychain) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKeychain.id":
		x.Id = value.Uint()
	case "warden.warden.v1beta2.EventUpdateKeychain.keychain_fees":
		x.KeychainFees = value.Message().Interface().(*KeychainFees)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKeychain does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateKeychain) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKeychain.keychain_fees":
		if x.KeychainFees == nil {
			x.KeychainFees = new(KeychainFees)
		}
		return protoreflect.ValueOfMessage(x.KeychainFees.ProtoReflect())
	case "warden.warden.v1beta2.EventUpdateKeychain.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventUpdateKeychain is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKeychain does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventUpdateKeychain) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventUpdateKeychain.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventUpdateKeychain.keychain_fees":
		m := new(KeychainFees)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventUpdateKeychain"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventUpdateKeychain does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventUpdateKeychain) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventUpdateKeychain", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventUpdateKeychain) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateKeychain) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventUpdateKeychain) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventUpdateKeychain) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventUpdateKeychain)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.KeychainFees != nil {
			l = options.Size(x.KeychainFees)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventUpdateKeychain)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.KeychainFees != nil {
			encoded, err := options.Marshal(x.KeychainFees)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventUpdateKeychain)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventUpdateKeychain: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventUpdateKeychain: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeychainFees", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.KeychainFees == nil {
					x.KeychainFees = &KeychainFees{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.KeychainFees); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventAddKeychainWriter               protoreflect.MessageDescriptor
	fd_EventAddKeychainWriter_id            protoreflect.FieldDescriptor
	fd_EventAddKeychainWriter_new_writer    protoreflect.FieldDescriptor
	fd_EventAddKeychainWriter_writers_count protoreflect.FieldDescriptor
)

func init() {
	file_warden_warden_v1beta2_events_proto_init()
	md_EventAddKeychainWriter = File_warden_warden_v1beta2_events_proto.Messages().ByName("EventAddKeychainWriter")
	fd_EventAddKeychainWriter_id = md_EventAddKeychainWriter.Fields().ByName("id")
	fd_EventAddKeychainWriter_new_writer = md_EventAddKeychainWriter.Fields().ByName("new_writer")
	fd_EventAddKeychainWriter_writers_count = md_EventAddKeychainWriter.Fields().ByName("writers_count")
}

var _ protoreflect.Message = (*fastReflection_EventAddKeychainWriter)(nil)

type fastReflection_EventAddKeychainWriter EventAddKeychainWriter

func (x *EventAddKeychainWriter) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventAddKeychainWriter)(x)
}

func (x *EventAddKeychainWriter) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_warden_v1beta2_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventAddKeychainWriter_messageType fastReflection_EventAddKeychainWriter_messageType
var _ protoreflect.MessageType = fastReflection_EventAddKeychainWriter_messageType{}

type fastReflection_EventAddKeychainWriter_messageType struct{}

func (x fastReflection_EventAddKeychainWriter_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventAddKeychainWriter)(nil)
}
func (x fastReflection_EventAddKeychainWriter_messageType) New() protoreflect.Message {
	return new(fastReflection_EventAddKeychainWriter)
}
func (x fastReflection_EventAddKeychainWriter_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventAddKeychainWriter
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventAddKeychainWriter) Descriptor() protoreflect.MessageDescriptor {
	return md_EventAddKeychainWriter
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventAddKeychainWriter) Type() protoreflect.MessageType {
	return _fastReflection_EventAddKeychainWriter_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventAddKeychainWriter) New() protoreflect.Message {
	return new(fastReflection_EventAddKeychainWriter)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventAddKeychainWriter) Interface() protoreflect.ProtoMessage {
	return (*EventAddKeychainWriter)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventAddKeychainWriter) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventAddKeychainWriter_id, value) {
			return
		}
	}
	if x.NewWriter != "" {
		value := protoreflect.ValueOfString(x.NewWriter)
		if !f(fd_EventAddKeychainWriter_new_writer, value) {
			return
		}
	}
	if x.WritersCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.WritersCount)
		if !f(fd_EventAddKeychainWriter_writers_count, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventAddKeychainWriter) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddKeychainWriter.id":
		return x.Id != uint64(0)
	case "warden.warden.v1beta2.EventAddKeychainWriter.new_writer":
		return x.NewWriter != ""
	case "warden.warden.v1beta2.EventAddKeychainWriter.writers_count":
		return x.WritersCount != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddKeychainWriter"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddKeychainWriter does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAddKeychainWriter) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddKeychainWriter.id":
		x.Id = uint64(0)
	case "warden.warden.v1beta2.EventAddKeychainWriter.new_writer":
		x.NewWriter = ""
	case "warden.warden.v1beta2.EventAddKeychainWriter.writers_count":
		x.WritersCount = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddKeychainWriter"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddKeychainWriter does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventAddKeychainWriter) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.warden.v1beta2.EventAddKeychainWriter.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "warden.warden.v1beta2.EventAddKeychainWriter.new_writer":
		value := x.NewWriter
		return protoreflect.ValueOfString(value)
	case "warden.warden.v1beta2.EventAddKeychainWriter.writers_count":
		value := x.WritersCount
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddKeychainWriter"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddKeychainWriter does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAddKeychainWriter) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddKeychainWriter.id":
		x.Id = value.Uint()
	case "warden.warden.v1beta2.EventAddKeychainWriter.new_writer":
		x.NewWriter = value.Interface().(string)
	case "warden.warden.v1beta2.EventAddKeychainWriter.writers_count":
		x.WritersCount = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddKeychainWriter"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddKeychainWriter does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAddKeychainWriter) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddKeychainWriter.id":
		panic(fmt.Errorf("field id of message warden.warden.v1beta2.EventAddKeychainWriter is not mutable"))
	case "warden.warden.v1beta2.EventAddKeychainWriter.new_writer":
		panic(fmt.Errorf("field new_writer of message warden.warden.v1beta2.EventAddKeychainWriter is not mutable"))
	case "warden.warden.v1beta2.EventAddKeychainWriter.writers_count":
		panic(fmt.Errorf("field writers_count of message warden.warden.v1beta2.EventAddKeychainWriter is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddKeychainWriter"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddKeychainWriter does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventAddKeychainWriter) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.warden.v1beta2.EventAddKeychainWriter.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.warden.v1beta2.EventAddKeychainWriter.new_writer":
		return protoreflect.ValueOfString("")
	case "warden.warden.v1beta2.EventAddKeychainWriter.writers_count":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.warden.v1beta2.EventAddKeychainWriter"))
		}
		panic(fmt.Errorf("message warden.warden.v1beta2.EventAddKeychainWriter does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventAddKeychainWriter) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.warden.v1beta2.EventAddKeychainWriter", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventAddKeychainWriter) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventAddKeychainWriter) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventAddKeychainWriter) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventAddKeychainWriter) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventAddKeychainWriter)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.NewWriter)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.WritersCount != 0 {
			n += 1 + runtime.Sov(uint64(x.WritersCount))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventAddKeychainWriter)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.WritersCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.WritersCount))
			i--
			dAtA[i] = 0x18
		}
		if len(x.NewWriter) > 0 {
			i -= len(x.NewWriter)
			copy(dAtA[i:], x.NewWriter)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NewWriter)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventAddKeychainWriter)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventAddKeychainWriter: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventAddKeychainWriter: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NewWriter", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NewWriter = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WritersCount", wireType)
				}
				x.WritersCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.WritersCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: warden/warden/v1beta2/events.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventCreateSpace is emitted on Space creation
type EventCreateSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the new space
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// creator is the account address of the space creator
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// owners_count is the count of the space owners
	OwnersCount uint64 `protobuf:"varint,3,opt,name=owners_count,json=ownersCount,proto3" json:"owners_count,omitempty"`
	// id of the rule to be applied to every admin operation
	AdminRuleId uint64 `protobuf:"varint,4,opt,name=admin_rule_id,json=adminRuleId,proto3" json:"admin_rule_id,omitempty"`
	// id of the rule to be applied to every sign operation
	SignRuleId uint64 `protobuf:"varint,5,opt,name=sign_rule_id,json=signRuleId,proto3" json:"sign_rule_id,omitempty"`
}

func (x *EventCreateSpace) Reset() {
	*x = EventCreateSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCreateSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCreateSpace) ProtoMessage() {}

// Deprecated: Use EventCreateSpace.ProtoReflect.Descriptor instead.
func (*EventCreateSpace) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventCreateSpace) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventCreateSpace) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *EventCreateSpace) GetOwnersCount() uint64 {
	if x != nil {
		return x.OwnersCount
	}
	return 0
}

func (x *EventCreateSpace) GetAdminRuleId() uint64 {
	if x != nil {
		return x.AdminRuleId
	}
	return 0
}

func (x *EventCreateSpace) GetSignRuleId() uint64 {
	if x != nil {
		return x.SignRuleId
	}
	return 0
}

// EventUpdateSpace is emitted when Space is updated
type EventUpdateSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the space being updated
	SpaceId uint64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// id of the rule to be applied to every admin operation
	AdminRuleId uint64 `protobuf:"varint,2,opt,name=admin_rule_id,json=adminRuleId,proto3" json:"admin_rule_id,omitempty"`
	// id of the rule to be applied to every sign operation
	SignRuleId uint64 `protobuf:"varint,3,opt,name=sign_rule_id,json=signRuleId,proto3" json:"sign_rule_id,omitempty"`
}

func (x *EventUpdateSpace) Reset() {
	*x = EventUpdateSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUpdateSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUpdateSpace) ProtoMessage() {}

// Deprecated: Use EventUpdateSpace.ProtoReflect.Descriptor instead.
func (*EventUpdateSpace) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventUpdateSpace) GetSpaceId() uint64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *EventUpdateSpace) GetAdminRuleId() uint64 {
	if x != nil {
		return x.AdminRuleId
	}
	return 0
}

func (x *EventUpdateSpace) GetSignRuleId() uint64 {
	if x != nil {
		return x.SignRuleId
	}
	return 0
}

// EventAddSpaceOwner is emitted when a new owner is added
type EventAddSpaceOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the space being updated
	SpaceId uint64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// new_owner is the address of the new space owner
	NewOwner string `protobuf:"bytes,2,opt,name=new_owner,json=newOwner,proto3" json:"new_owner,omitempty"`
	// owners_count is the new count of space owners
	OwnersCount uint64 `protobuf:"varint,3,opt,name=owners_count,json=ownersCount,proto3" json:"owners_count,omitempty"`
}

func (x *EventAddSpaceOwner) Reset() {
	*x = EventAddSpaceOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAddSpaceOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAddSpaceOwner) ProtoMessage() {}

// Deprecated: Use EventAddSpaceOwner.ProtoReflect.Descriptor instead.
func (*EventAddSpaceOwner) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventAddSpaceOwner) GetSpaceId() uint64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *EventAddSpaceOwner) GetNewOwner() string {
	if x != nil {
		return x.NewOwner
	}
	return ""
}

func (x *EventAddSpaceOwner) GetOwnersCount() uint64 {
	if x != nil {
		return x.OwnersCount
	}
	return 0
}

// EventRemoveSpaceOwner is emitted when an owner is removed
type EventRemoveSpaceOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the space being updated
	SpaceId uint64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// removed_owner is the address of the removed space owner
	RemovedOwner string `protobuf:"bytes,2,opt,name=removed_owner,json=removedOwner,proto3" json:"removed_owner,omitempty"`
	// owners_count is the new count of space owners
	OwnersCount uint64 `protobuf:"varint,3,opt,name=owners_count,json=ownersCount,proto3" json:"owners_count,omitempty"`
}

func (x *EventRemoveSpaceOwner) Reset() {
	*x = EventRemoveSpaceOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRemoveSpaceOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRemoveSpaceOwner) ProtoMessage() {}

// Deprecated: Use EventRemoveSpaceOwner.ProtoReflect.Descriptor instead.
func (*EventRemoveSpaceOwner) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventRemoveSpaceOwner) GetSpaceId() uint64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *EventRemoveSpaceOwner) GetRemovedOwner() string {
	if x != nil {
		return x.RemovedOwner
	}
	return ""
}

func (x *EventRemoveSpaceOwner) GetOwnersCount() uint64 {
	if x != nil {
		return x.OwnersCount
	}
	return 0
}

// EventNewKeyRequest is emitted on new key request
type EventNewKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the new key request
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// space_id associated with the key request
	SpaceId uint64 `protobuf:"varint,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// keychain_id associated with the key request
	KeychainId uint64 `protobuf:"varint,3,opt,name=keychain_id,json=keychainId,proto3" json:"keychain_id,omitempty"`
	// id of the rule to be applied to every sign operation for this key
	RuleId uint64 `protobuf:"varint,4,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	// the crypto scheme requested for this key
	KeyType KeyType `protobuf:"varint,5,opt,name=key_type,json=keyType,proto3,enum=warden.warden.v1beta2.KeyType" json:"key_type,omitempty"`
	// address of the account that requested the key
	Creator string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *EventNewKeyRequest) Reset() {
	*x = EventNewKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNewKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNewKeyRequest) ProtoMessage() {}

// Deprecated: Use EventNewKeyRequest.ProtoReflect.Descriptor instead.
func (*EventNewKeyRequest) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{4}
}

func (x *EventNewKeyRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventNewKeyRequest) GetSpaceId() uint64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *EventNewKeyRequest) GetKeychainId() uint64 {
	if x != nil {
		return x.KeychainId
	}
	return 0
}

func (x *EventNewKeyRequest) GetRuleId() uint64 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *EventNewKeyRequest) GetKeyType() KeyType {
	if x != nil {
		return x.KeyType
	}
	return KeyType_KEY_TYPE_UNSPECIFIED
}

func (x *EventNewKeyRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

// EventNewKey is emitted when a new Key is created
type EventNewKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the new key
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// the crypto scheme used by this key
	KeyType KeyType `protobuf:"varint,2,opt,name=key_type,json=keyType,proto3,enum=warden.warden.v1beta2.KeyType" json:"key_type,omitempty"`
	// space_id associated with the key request
	SpaceId uint64 `protobuf:"varint,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// keychain_id associated with the key request
	KeychainId uint64 `protobuf:"varint,4,opt,name=keychain_id,json=keychainId,proto3" json:"keychain_id,omitempty"`
	// id of the rule to be applied to every sign operation for this key
	RuleId uint64 `protobuf:"varint,5,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
}

func (x *EventNewKey) Reset() {
	*x = EventNewKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNewKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNewKey) ProtoMessage() {}

// Deprecated: Use EventNewKey.ProtoReflect.Descriptor instead.
func (*EventNewKey) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventNewKey) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventNewKey) GetKeyType() KeyType {
	if x != nil {
		return x.KeyType
	}
	return KeyType_KEY_TYPE_UNSPECIFIED
}

func (x *EventNewKey) GetSpaceId() uint64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *EventNewKey) GetKeychainId() uint64 {
	if x != nil {
		return x.KeychainId
	}
	return 0
}

func (x *EventNewKey) GetRuleId() uint64 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

// EventRejectKeyRequest is emitted when a Key request is rejected
type EventRejectKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the key request
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EventRejectKeyRequest) Reset() {
	*x = EventRejectKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRejectKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRejectKeyRequest) ProtoMessage() {}

// Deprecated: Use EventRejectKeyRequest.ProtoReflect.Descriptor instead.
func (*EventRejectKeyRequest) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{6}
}

func (x *EventRejectKeyRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// EventUpdateKey is emitted when a key is updated
type EventUpdateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the key
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// id of the rule to be applied to every sign operation
	RuleId uint64 `protobuf:"varint,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
}

func (x *EventUpdateKey) Reset() {
	*x = EventUpdateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUpdateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUpdateKey) ProtoMessage() {}

// Deprecated: Use EventUpdateKey.ProtoReflect.Descriptor instead.
func (*EventUpdateKey) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{7}
}

func (x *EventUpdateKey) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventUpdateKey) GetRuleId() uint64 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

// EventNewSignatureRequest is emitted on new signature requests
type EventNewSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the signature request
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// id of the Key to be used for signing
	KeyId uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// address of the account that requested the signature
	Creator string `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *EventNewSignatureRequest) Reset() {
	*x = EventNewSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNewSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNewSignatureRequest) ProtoMessage() {}

// Deprecated: Use EventNewSignatureRequest.ProtoReflect.Descriptor instead.
func (*EventNewSignatureRequest) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{8}
}

func (x *EventNewSignatureRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventNewSignatureRequest) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *EventNewSignatureRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

// EventRequestNewSignatureFulfilled is emitted when signature request is fulfilled
type EventFulfilSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the sign request
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EventFulfilSignatureRequest) Reset() {
	*x = EventFulfilSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFulfilSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFulfilSignatureRequest) ProtoMessage() {}

// Deprecated: Use EventFulfilSignatureRequest.ProtoReflect.Descriptor instead.
func (*EventFulfilSignatureRequest) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{9}
}

func (x *EventFulfilSignatureRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// EventRejectSignatureRequest is emitted when a signature request is rejected
type EventRejectSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the signature request
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EventRejectSignatureRequest) Reset() {
	*x = EventRejectSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRejectSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRejectSignatureRequest) ProtoMessage() {}

// Deprecated: Use EventRejectSignatureRequest.ProtoReflect.Descriptor instead.
func (*EventRejectSignatureRequest) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{10}
}

func (x *EventRejectSignatureRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// EventNewKeychain is emitted on Keychain creation
type EventNewKeychain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the new keychain
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// address of the account that created the keychain
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// amount of charging fees for key and signature requests
	KeychainFees *KeychainFees `protobuf:"bytes,3,opt,name=keychain_fees,json=keychainFees,proto3" json:"keychain_fees,omitempty"`
}

func (x *EventNewKeychain) Reset() {
	*x = EventNewKeychain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNewKeychain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNewKeychain) ProtoMessage() {}

// Deprecated: Use EventNewKeychain.ProtoReflect.Descriptor instead.
func (*EventNewKeychain) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{11}
}

func (x *EventNewKeychain) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventNewKeychain) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *EventNewKeychain) GetKeychainFees() *KeychainFees {
	if x != nil {
		return x.KeychainFees
	}
	return nil
}

// EventUpdateKeychain is emitted when a Keychain is updated
type EventUpdateKeychain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the keychain
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// amount of charging fees for key and signature requests
	KeychainFees *KeychainFees `protobuf:"bytes,2,opt,name=keychain_fees,json=keychainFees,proto3" json:"keychain_fees,omitempty"`
}

func (x *EventUpdateKeychain) Reset() {
	*x = EventUpdateKeychain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUpdateKeychain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUpdateKeychain) ProtoMessage() {}

// Deprecated: Use EventUpdateKeychain.ProtoReflect.Descriptor instead.
func (*EventUpdateKeychain) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{12}
}

func (x *EventUpdateKeychain) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventUpdateKeychain) GetKeychainFees() *KeychainFees {
	if x != nil {
		return x.KeychainFees
	}
	return nil
}

// EventAddKeychainWriter is emitted when a new writer address is added to a Keychain
type EventAddKeychainWriter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the keychain
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// address of the new writer
	NewWriter string `protobuf:"bytes,2,opt,name=new_writer,json=newWriter,proto3" json:"new_writer,omitempty"`
	// updated count of writers
	WritersCount uint64 `protobuf:"varint,3,opt,name=writers_count,json=writersCount,proto3" json:"writers_count,omitempty"`
}

func (x *EventAddKeychainWriter) Reset() {
	*x = EventAddKeychainWriter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_warden_v1beta2_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAddKeychainWriter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAddKeychainWriter) ProtoMessage() {}

// Deprecated: Use EventAddKeychainWriter.ProtoReflect.Descriptor instead.
func (*EventAddKeychainWriter) Descriptor() ([]byte, []int) {
	return file_warden_warden_v1beta2_events_proto_rawDescGZIP(), []int{13}
}

func (x *EventAddKeychainWriter) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventAddKeychainWriter) GetNewWriter() string {
	if x != nil {
		return x.NewWriter
	}
	return ""
}

func (x *EventAddKeychainWriter) GetWritersCount() uint64 {
	if x != nil {
		return x.WritersCount
	}
	return 0
}

var File_warden_warden_v1beta2_events_proto protoreflect.FileDescriptor

var file_warden_warden_v1beta2_events_proto_rawDesc = []byte{
	0x0a, 0x22, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x1a, 0x1f, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x2f, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x6e, 0x2f, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x32, 0x2f, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x10, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x6f, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x7a, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xce, 0x01, 0x0a,
	0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x2e, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xad, 0x01,
	0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x27, 0x0a,
	0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x5b, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x2d,
	0x0a, 0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a,
	0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x86, 0x01, 0x0a,
	0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x0d, 0x6b,
	0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x46, 0x65, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x0d,
	0x6b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x4b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0xf1, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x2e, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x42, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x3b, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x32, 0xa2, 0x02, 0x03, 0x57, 0x57, 0x58, 0xaa, 0x02, 0x15, 0x57, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0xca, 0x02, 0x15, 0x57, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x5c, 0x57, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0xe2, 0x02, 0x21, 0x57, 0x61, 0x72,
	0x64, 0x65, 0x6e, 0x5c, 0x57, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x17, 0x57, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x3a, 0x3a, 0x57, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_warden_warden_v1beta2_events_proto_rawDescOnce sync.Once
	file_warden_warden_v1beta2_events_proto_rawDescData = file_warden_warden_v1beta2_events_proto_rawDesc
)

func file_warden_warden_v1beta2_events_proto_rawDescGZIP() []byte {
	file_warden_warden_v1beta2_events_proto_rawDescOnce.Do(func() {
		file_warden_warden_v1beta2_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_warden_warden_v1beta2_events_proto_rawDescData)
	})
	return file_warden_warden_v1beta2_events_proto_rawDescData
}

var file_warden_warden_v1beta2_events_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_warden_warden_v1beta2_events_proto_goTypes = []interface{}{
	(*EventCreateSpace)(nil),            // 0: warden.warden.v1beta2.EventCreateSpace
	(*EventUpdateSpace)(nil),            // 1: warden.warden.v1beta2.EventUpdateSpace
	(*EventAddSpaceOwner)(nil),          // 2: warden.warden.v1beta2.EventAddSpaceOwner
	(*EventRemoveSpaceOwner)(nil),       // 3: warden.warden.v1beta2.EventRemoveSpaceOwner
	(*EventNewKeyRequest)(nil),          // 4: warden.warden.v1beta2.EventNewKeyRequest
	(*EventNewKey)(nil),                 // 5: warden.warden.v1beta2.EventNewKey
	(*EventRejectKeyRequest)(nil),       // 6: warden.warden.v1beta2.EventRejectKeyRequest
	(*EventUpdateKey)(nil),              // 7: warden.warden.v1beta2.EventUpdateKey
	(*EventNewSignatureRequest)(nil),    // 8: warden.warden.v1beta2.EventNewSignatureRequest
	(*EventFulfilSignatureRequest)(nil), // 9: warden.warden.v1beta2.EventFulfilSignatureRequest
	(*EventRejectSignatureRequest)(nil), // 10: warden.warden.v1beta2.EventRejectSignatureRequest
	(*EventNewKeychain)(nil),            // 11: warden.warden.v1beta2.EventNewKeychain
	(*EventUpdateKeychain)(nil),         // 12: warden.warden.v1beta2.EventUpdateKeychain
	(*EventAddKeychainWriter)(nil),      // 13: warden.warden.v1beta2.EventAddKeychainWriter
	(KeyType)(0),                        // 14: warden.warden.v1beta2.KeyType
	(*KeychainFees)(nil),                // 15: warden.warden.v1beta2.KeychainFees
}
var file_warden_warden_v1beta2_events_proto_depIdxs = []int32{
	14, // 0: warden.warden.v1beta2.EventNewKeyRequest.key_type:type_name -> warden.warden.v1beta2.KeyType
	14, // 1: warden.warden.v1beta2.EventNewKey.key_type:type_name -> warden.warden.v1beta2.KeyType
	15, // 2: warden.warden.v1beta2.EventNewKeychain.keychain_fees:type_name -> warden.warden.v1beta2.KeychainFees
	15, // 3: warden.warden.v1beta2.EventUpdateKeychain.keychain_fees:type_name -> warden.warden.v1beta2.KeychainFees
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_warden_warden_v1beta2_events_proto_init() }
func file_warden_warden_v1beta2_events_proto_init() {
	if File_warden_warden_v1beta2_events_proto != nil {
		return
	}
	file_warden_warden_v1beta2_key_proto_init()
	file_warden_warden_v1beta2_keychain_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_warden_warden_v1beta2_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCreateSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUpdateSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAddSpaceOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRemoveSpaceOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNewKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNewKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRejectKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUpdateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNewSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFulfilSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRejectSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNewKeychain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUpdateKeychain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warden_warden_v1beta2_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAddKeychainWriter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_warden_warden_v1beta2_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warden_warden_v1beta2_events_proto_goTypes,
		DependencyIndexes: file_warden_warden_v1beta2_events_proto_depIdxs,
		MessageInfos:      file_warden_warden_v1beta2_events_proto_msgTypes,
	}.Build()
	File_warden_warden_v1beta2_events_proto = out.File
	file_warden_warden_v1beta2_events_proto_rawDesc = nil
	file_warden_warden_v1beta2_events_proto_goTypes = nil
	file_warden_warden_v1beta2_events_proto_depIdxs = nil
}
